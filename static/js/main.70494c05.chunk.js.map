{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","style","color","fontSize","name","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","data-icon","data-inline","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","CGPA","work","CompanyName","MonthOfLeaving","YearOfLeaving","works","value","skillsDescription","skills","skillname","Porfolio","portfolio","description","ContactUs","linkedinId","Footer","imagebaseurl","skypeid","percentage","testimonials","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","ContactUs_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70494c05.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\"  href=\"#home\"  style={{color :\"black\",fontSize:\"20px\"}}>Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\"  style={{color :\"black\",fontSize:\"20px\"}}>About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\"  style={{color :\"black\",fontSize:\"20px\"}}>Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\"  style={{color :\"black\",fontSize:\"20px\"}}>Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\"  style={{color :\"black\",fontSize:\"20px\"}}>Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {resumeData.role}.{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n                \n                <li key=\"Geeks For Geeks\">\n                    <a href=\"https://auth.geeksforgeeks.org/user/JanhaviTatewar/practice/\" target=\"_blank\"><i className=\"iconify\" data-icon=\"simple-icons:geeksforgeeks\" data-inline=\"false\"></i></a>\n                      </li>\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n            <img className=\"profile-pic\"  src=\"public/images/Janhavi.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item \">\n                       <div className=\"twelve columns block\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <label>CGPA : {item.CGPA}</label> \n                        </div>\n                        :&nbsp;\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns block\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                               <label><b>Work Description :-</b></label>                     \n                          {item.works.map((value) => {\n                            return (\n                            <>\n                            <p className=\"text_color\">\n                          {value}\n                          </p>\n                          </>\n                            )})\n                }\n                \n                \n                       </div>\n                       :&nbsp;\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      // <li>\n                      // <span className={`bar-expand`} style={{ \"width\" : `${item.percentage }`,\"-moz-animation\": \"css 2s ease\",\t\"-webkit-animation\": \"css 2s ease\"}}>\n                      // </span><em>{item.skillname}</em>\n                      // </li>\n                      <div className=\"item\" >\n                 <div className=\"block\">\n                 <b style={{color:\"black\"}}><h4>{item.skillname}</h4></b>\n                 </div>\n                 </div>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1><b style={{color:\"black\"}}>Check Out Some of My Works.</b></h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"item\" >\n                 <div className=\"block\">\n                 \n                         <h5>{item.name}</h5>\n                        { item.description.map((value) => {\n                              return(\n                              <div className=\"text_color\">{value}</div>\n                               )\n                              })\n                          }     \n                     </div>\n                  :&nbsp;\n              </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n         <li key=\"Geeks For Geeks\">\n            <a href=\"https://auth.geeksforgeeks.org/user/JanhaviTatewar/practice/\" target=\"_blank\"><i className=\"iconify\" data-icon=\"simple-icons:geeksforgeeks\" data-inline=\"false\"></i></a>\n          </li>\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"imagebaseurl\":\"https://github.com/TatewarJanhavi\",\n    \"name\": \"Janhavi Tatewar\",\n    \"role\": \"Full Stack Developer\",\n    \"linkedinId\": \"https://www.linkedin.com/in/janhavi-tatewar-4b9189143/\",\n    \"skypeid\": \"Your skypeid\",\n    \"roleDescription\": \"I like dabbling in various parts of Software development and like to learn about new technologies. I want to secure a responsible career opportunity to fully utilize my training and skills, while making a signiﬁcant contribution  to the success of the company\",\n    \"socialLinks\":[ \n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/janhavi-tatewar-4b9189143/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/TatewarJanhavi\",\n          \"className\":\"fa fa-github\"\n        },\n        {\n          \"name\":\"leetcode\",\n          \"url\":\"https://leetcode.com/08111998\",\n          \"className\":\"cib-leetcode\"\n        },\n        {\n          \"name\":\"HackerRank\",\n          \"url\":\"https://www.hackerrank.com/tatewarjanhavi5\",\n          \"className\":\"cib-hackerrank\"\n        }\n        \n      ],\n    \"aboutme\":\"I am currently working as Full Stack developer in BlackHawk Network. It's been an year I am working in BlackHawk Network . I did 6 months intership in Grab India, where I was DevSecOps Intern .In 2019  I won Smart India Hackthon where I created an Helmet Detection Application. I want to secure a responsible career opportunity to fully utilize my training and skills, while making a signiﬁcant contribution to the success of the company\",\n    \"address\":\"India\",\n    \"website\":\"https://github.com/TatewarJanhavi\",\n    \"education\":[\n      {\n        \"UniversityName\":\"Shri Ramdeobaba College of Engineering and Management\",\n        \"specialization\":\"B.E Computer Science\",\n        \"MonthOfPassing\":\"MAY\",\n        \"YearOfPassing\":\"2020\",\n        \"CGPA\":\"9.31\"\n      },\n      {\n        \"UniversityName\":\"Higher Secondary Certificate\",\n        \"specialization\":\"Computer Science\",\n        \"MonthOfPassing\":\"May\",\n        \"YearOfPassing\":\"2016\",\n        \"CGPA\":\"8.0\"\n      },\n      {\n        \"UniversityName\":\"Secondary School Certificate\",\n        \"specialization\":\"Somalwar High School\",\n        \"MonthOfPassing\":\"May\",\n        \"YearOfPassing\":\"2014\",\n        \"CGPA\":\"8.9\"\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"BlackHawk Network\",\n        \"specialization\":\"Software Engineer\",\n        \"MonthOfLeaving\":\"Currently Working here\",\n        \"works\":[\"-Working on a B2B Rewards platform ( named Hawk Marketplace portal ) which enables clients to place Gift cards order.\",\n          \"-Working as Full Stack developer Frontend is designed using Ruby on Rails Backend is designed using Spring Boot  Database used is Postgres, MySql . Worked on Microservices which send emailAnd SMS\",\n        \"-Worked on AWS services such as SQS , CloudWatch , Api Gateway , CloudFormation , Role policy , S3 bucket and delivered a POC to handle scheduler synchronization over multiple instances using sqs queue\",\n        \"-Developed POC on Shedlock which helped in scheduling job for multiple EC2 instance in efficient and optimized way.\",\n        \"-Developed POC on Akka framework which helped in achieving concurrency in  microservice\"\n        \n        ]\n      },\n      {\n        \"CompanyName\":\"GRAB\",\n        \"specialization\":\"DevSecOps Intern\",\n        \"MonthOfLeaving\":\"Aug\",\n        \"YearOfLeaving\":\"2020\",\n        \"works\":[\"- Worked on AWS services  and REST Api\",\n        \"- Created a Slack bot which automate Devops processes\",\n        \"- Worked on Web Application Firewall to filter incoming traffic\",\n        \"- Worked on OKTA automation \",\n        \"- Wrote a script which detects dangling domain and protect from subdomain attack\"\n      ]\n        \n      },\n      {\n        \"CompanyName\":\"InfoCepts\",\n        \"specialization\":\"Data Analyst Intern\",\n        \"MonthOfLeaving\":\"May\",\n        \"YearOfLeaving\":\"2019\",\n        \"works\":[\n         \"- Data Analysis and Reporting was  performed using the MicroStrategy tool.\",\n          \"- Dataset used: Indian Lok Sabha Election.\"\n\n        ]\n       \n        \n      }\n    ],\n    \"skillsDescription\":\"\",\n    \"skills\":[\n      {\n        \"skillname\":\"JAVA\",\n        \"percentage\": \"90%\"\n      \n      },\n      {\n        \"skillname\":\"SPRING BOOT \",\n        \"percentage\": \"80%\"\n      \n      },\n      {\n        \"skillname\":\"AMAZON WEB SERVICE\",\n        \"percentage\": \"60%\"\n      \n      },\n      {\n        \"skillname\":\"DATA STRUCTURE AND ALGORITHMS\",\n        \"percentage\": \"70%\"\n      \n      },\n      {\n        \"skillname\":\"PYTHON\",\n        \"percentage\": \"70%\"\n      \n      },\n      {\n        \"skillname\":\"REACTJS\",\n        \"percentage\": \"60%\",\n      },\n      \n      {\n        \"skillname\":\"MongoDB\",\n        \"percentage\": \"50%\"\n      \n      },\n      {\n        \"skillname\":\"HTML5\",\n        \"percentage\": \"70%\"\n      \n      },\n      {\n        \"skillname\":\"CSS\",\n        \"percentage\": \"70%\"\n      },\n      {\n        \"skillname\":\"JAVASCRIPT\",\n        \"percentage\": \"70%\",\n      },\n      {\n        \"skillname\":\"MYSQL\",\n        \"percentage\": \"70%\",\n      },\n      {\n        \"skillname\":\"POSTGRES\",\n        \"percentage\": \"60%\",\n      },\n      {\n        \"skillname\":\"RUBY ON RAILS\",\n        \"percentage\": \"70%\",\n      },\n      {\n        \"skillname\":\"AKKA FRAMEWORK\",\n        \"percentage\": \"70%\",\n      }\n\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"Helmet Detection (Smart India Hackathon) \",\n        \"description\":[\"● Developed a software which counts the total number of vehicles on traﬃc signal,detects people who are not wearing a helmet ,detects number plate of vehicles and generate e- challan for respective vehicle. \",\n        \"● For  detecting people and bikes I used a pre trained YOLO model which was trained on a COCO dataset.YOLOV2 model which can detect a motorcycle and human being separately. It  also created bounding boxes around them. We used the concept of IOU(intersection over union)to calculate overlapping between different boxes of people and bikes\",\n        \"● For helmet detection we used around 10k images, 2000 of which were available online and the rest of the images we annotated ourselves by using MICROSOFT VOTT annotator.\",\n        \"● For detection of number plates, we have used OpenALPR.\",\n        \"● UI created was using Python Tkinter . \"],\n        \n      },\n      {\n        \"name\":\"Face Recognition Payment Application\",\n        \"description\":[\"● An A​ndroid app which recognizes your face and asks you to blink,if face matches successfully your transaction will be processed.\",\n        \"● For Face detection we have used ​Depthwise Separable Convolution ​by using ​Mobile Vision API​.\",\n        \"● Face Recognition using ​dlib state of the art face recognition model ​which is based on deep learning​.\",\n        \"● For Bink detection it checks eye aspect ratio\"\n\n      ]\n       \n      },\n      {\n        \"name\":\"Relive your Memories\" ,\n        \"description\":[\"An Application where you need to create your account and you can store you memories as a Memory card\",\n        \"Tech Stack :\",\n        \"Front-End - React\",\n        \"Back-End - Node.js, Express.js & MongoDB\"]\n        },\n      {\n        \"name\":\"Blockchain\" ,\n        \"description\":[\"Developed a simple blockchain using java wherein a distributed network was created and blocks were chained using Merkle tree .SHA-256 algorithm was used to generate hash.\"],  \n        \n      }\n    ],\n    \"testimonials\":[\n      {\n        \"description\":\"This is a sample testimonial\",\n        \"name\":\"Some technical guy\"\n      },\n      {\n        \"description\":\"This is a sample testimonial\",\n        \"name\":\"Some technical guy\"\n      }\n    ]\n  }\n  \n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\n\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}